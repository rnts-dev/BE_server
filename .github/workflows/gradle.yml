name: CI/CD Pipeline

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build --platform linux/amd64 -t ${{ secrets.DOCKER_HUB_USERNAME }}/rnts2:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/rnts2:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Decode SSH key
        id: decode-key
        run: |
          echo "${{ secrets.NCP_SERVER_KEY }}" | base64 --decode > /tmp/your-key.pem
          chmod 600 /tmp/your-key.pem

      - name: Deploy to SERVER
        env:
          USER: ${{ secrets.NCP_SERVER_USER }}
          HOST: ${{ secrets.NCP_SERVER_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/your-key.pem $USER@$HOST << 'EOF'
            # Ensure Docker is running
            sudo service docker start
          
            # Login to Docker Hub
            echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
          
            # Pull the latest image
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/rnts2:latest
          
            # Update docker-compose.yml with the latest version
            # Change the image name in the docker-compose file
            sed -i "s|image:.*|image: ${{ secrets.DOCKER_HUB_USERNAME }}/rnts2:latest|g" /path/to/your/project/docker-compose.yml
          
            # Stop the currently running containers
            docker-compose down
          
            # Start the new containers
            docker-compose up -d
          EOF

